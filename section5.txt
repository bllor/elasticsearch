section 5

--------------------------------
집계, 버킷 및 메트릭

하둡, 스파크보다 빨리 작동할 수 있다.

rating인덱스에서 모든 rating을 집계하려고 할 때
curl -XGET '127.0.0.1:9200/ratings/_search?size=0&pretty' -d '
{
"aggs" : {
"ratings": {
"terms": {
"field": "rating"
}
}
}
}
'
평점 5점인 영화의 집계를 보고 싶으면,
curl -XGET '127.0.0.1:9200/ratings/_search?size=0&pretty' -d '
{
"query":{
"match":{
"rating": 5.0
}
},
"aggs" : {
"ratings": {
"terms": {
"field": "rating"
}
}
}
}
'
스타워즈의 평균 평점을 보고 싶으면,
평균을 나타내는 기능인 avg를 사용하여 나타낸다.
{
"query":{
"match":{
"rating": 5.0
}
},
"aggs" : {
"avg_ratings": {
"avg":{
"terms": {
"field": "rating"
}
}
}
}
}
'


---------------------
히스토그램(막대그래프)

특정한 구간의 문서의 개수를 보여줌

curl -XGET '127.0.0.1:9200/movies/_search?size=0?pretty'? -d'
{
"aggs": {
"whole_ratings": {
"histogram": {
"field" : "rating",
"inteval": 1.0
}
}
}
}
'
rating을 필드로 하고 간격을 1.0으로 설정하여 데이터를 나누고,
그래프는 kibana가 그린다.



----------------------
시계열 데이터

타임스탬프가 찍혀있는 로그 같은 것을 시계열 데이터라고 한다.

ex)웹사이트의 조회기록을 시간별로 분석하고 싶을 때

curl -XGET '127.0.0.1:9200/kafka-logs/_search?size?=0&pretty' -d '
{
"aggs": {
"timestamp": {
"date_histogram": { // 타입.
"field": "@timestamp",
"inteval": "hour"
}
}
}
}
'


ex) 2017년 5월5일에 언제 홈페이지가 다운 되었는가?
상태코드는 500익, 카프카로그에서 분단위로 찾아내어라.

curl -XGET '127.0.0.1:9200/kafka_log/search?pretty' -d '
{
"query": {
"match": {
"status": "500"
}
}
,
"aggs": {
"date_histogram": {
"field": "@timestamp",
"inteval": "minutes"
}
}
}
'
--> timestamp 필드가 빠졌다.

curl -XGET '127.0.0.1:9200/kafka_log/search?pretty' -d '
{
"query": {
"match": {
"status": "500"
}
}
,
"aggs": {
"timestamp":{
"date_histogram": {
"field": "@timestamp",
"inteval": "minutes"
}
}
}
}
'

-----------------------
중첩 집계
집계한 결과를 또 집계할 수 있다.

스타워즈의 시리즈별로 평균 평점 구하기

curl -XGET '127.0.0.1:9200/ratings/_search?size=0&pretty' -d '
{
	"query": {
		"match_phrase": {
			"title": "Star Wars"
		}
	},
	"aggs": {
		"titles": {
			"terms": {"field": "title.raw"},
			"aggs": {
				"avg_rating": {
					"avg": {
						"field": "rating"
					}
				}
			}
		}
	}
}
'

위와 같이 하면 에러가 발생하는데,
키워드 타입을 추가하기 위해서 인덱스의 매핑을 다시 해야한다.
curl -XGET 127.0.0.1:9200/ratings/ -d '
{
	"mappings": {
	"properites": {
		"title": {
			"type": "text",
			"fileddata": true,
			"fields": {
				"raw": {
					"type": "keyword"
					}
				}	
			}
		}
	}
}
'
매핑을 다시 한 후 처음 실행한 명령어를 실행하면 집계가 잘되는 것을 확인할 수 있다.

